#!/usr/bin/env bash
#
# This script will generate list of outdated clients
# Create folders /usr/local/share/burp-custom and /var/log/burp-custom
# chmod +x the sh file
# Locate this file in  /usr/local/share/burp-custom/burp-custom-reports.sh
# link to if desired ln -s /usr/local/share/burp-custom/burp-custom-reports.sh /usr/local/bin/bur-custom-reports.sh

outdated=`date -d "1 days ago" +%F`
sendto=emailto@server.com
sendfrom=emailsender@from.com
timestamp=`date +%F`
logfolder=/var/log/burp-custom/

#Variable to uso on outdated hosts functions
repoutdfile=burp-outdated.$outdated.$timestamp.log

#logrotate(){
#
#}


report_outdated(){
    date_backup=`echo $1 | sed -e 's/\s\+/ /g' | cut -d' ' -f6`
    echo "line is $1"
    echo "date_backup is $date_backup"
    if [[ "$date_backup" < "$outdated" ]] ; then
        echo "outdated burp users on $HOSTNAME" > $repoutdfile
        echo "$1" > $repoutdfile
    fi
}

reports(){
    report_outdated "$1"
}

send_email_report(){
    cat $1 | mail -s "$2" $sendto -aFrom:$sendfrom
}


# example output line:
# hosname       idle           last backup: 0000023 2015-04-10 16:04:01
# read by line report from burp
burp -a S -c /etc/burp/burp-server.conf | grep -i "last backup" | while read -r line; do reports "$line" ; done

echo "finishing and sending email"
#Send email using function, parse file and then subject inside "subject line"
send_email_report $repoutdfile "Outdated hosts older than $outdated"
