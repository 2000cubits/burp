#!/usr/bin/env bash
#
# Run builds and tests on Amazon virtual machines.

prog=$(basename $0)
DIR=$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)

usage()
{
	echo "usage: $prog tarfile directory" 1>&2
	exit 1
}

tarfile="$1"
directory="$2"
[ -n "$tarfile" ] || usage
[ -n "$directory" ] || usage
[ -f "$tarfile" ] || fail "tarfile $tarfile does not exist"

. "$DIR"/vms_shared || fail
instanceids=$(get_all_instanceids)
restart_instanceids "$instanceids"
get_summary "$instanceids"

host="ubuntu@$linux"
ssh_opts="-i /var/lib/jenkins/aws/ubfree.pem -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

# It is possible for the machine to be up, but for sshd to not yet be running.
# Try multiple times for the initial connect.
attempts=0
attempts_max=20
while true ; do
	ssh $ssh_opts "$host" true && break
	attempts=$((attempts+1))
	[ "$attempts" = "$max_attempts" ] && \
		fail "Could not make initial ssh connection after $attempts"
done

ssh $ssh_opts "$host" "rm -rf $tarfile $directory" \
	|| fail "cleaning linux machine"
scp $ssh_opts "$tarfile" "$host:" \
	|| fail "scp $tarfile to linux machine"
ssh $ssh_opts "$host" "tar -xvf $tarfile" \
	|| fail "unpacking $tarfile"
ssh $ssh_opts "$host" \
	"cd $directory && ./configure && make test" \
		|| fail "make test"
ssh $ssh_opts "$host" \
	"cd $directory/src/win32 && make && make WIN64=yes" \
		|| fail "building windows installers"
ssh $ssh_opts "$host" \
	"cd $directory/test && ./test_windows64 $linux $windows Administrator" \
		|| fail "running windows tests"
scp -r $ssh_opts "$host:$directory/src/win*/release*/burp-win*installer*.exe" . || fail "copying windows installers"
scp -r $ssh_opts "$host:/tmp/burp-coverage" . || fail "copying code coverage"
ssh $ssh_opts "$host" "rm -rf $tarfile $directory" \
	|| fail "cleaning linux machine"

stop_instanceids "$instanceids"

echo "Everything succeeded."

exit 0
