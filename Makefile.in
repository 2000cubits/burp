# 
# Version $Id: Makefile.in 8835 2009-05-16 14:25:36Z kerns $
# Master Makefile
#
@MCOMMON@

srcdir =	@srcdir@
VPATH = 	@srcdir@
.PATH:		@srcdir@
topdir = .
thisdir = .


first_rule: all
dummy:

# --client-only directories
fd_subdirs = src

# Non-client-only directores
subdirs =    src/cats src/tools

all_subdirs = ${fd_subdirs} manpages

DIST =	INSTALL README.configure configure Makefile Makefile.in ChangeLog

DIST_CFG = autoconf/aclocal.m4 autoconf/configure.in \
	autoconf/config.h.in  autoconf/acconfig.h  autoconf/Make.common.in \
	autoconf/install-sh autoconf/mkinstalldirs

doc_files = VERIFYING technotes ChangeLog README ReleaseNotes LICENSE \
	    INSTALL

MKDIR = $(srcdir)/autoconf/mkinstalldirs
LIBTOOL_DEPS = @LIBTOOL_DEPS@

#-------------------------------------------------------------------------

all: Makefile
	@for I in ${all_subdirs}; \
	  do (cd $$I; echo "==>Entering directory `pwd`"; \
	      $(MAKE) $@ || (echo ""; echo ""; echo "  ====== Error in `pwd` ======"; \
			    echo ""; echo "";)); \
	done

depend:
	@for I in ${all_subdirs}; \
	  do (cd $$I; echo "==>Entering directory `pwd`"; $(MAKE) DESTDIR=$(DESTDIR) $@ || exit 1); done
	
burp: Makefile	   
	@for I in ${fd_subdirs}; \
	  do (cd $$I; echo "==>Entering directory `pwd`"; \
	      $(MAKE) all || (echo ""; echo ""; echo "	 ====== Error in `pwd` ======; \
			    echo ""; echo "";)); \
	done

#-------------------------------------------------------------------------

autoconf/aclocal.m4: autoconf/configure.in autoconf/burp-macros/* autoconf/gettext-macros/* autoconf/libtool/*

#  Note, the following is needed in the above if ever any new macro is added.
#   However, at the current time, the -I libtool causes the autoconf/aclocal.m4
#   get messed up, so this is commented out
#	cd autoconf && aclocal -I burp-macros -I gettext-macros -I libtool

configure: autoconf/configure.in autoconf/aclocal.m4 autoconf/acconfig.h autoconf/config.h.in
	cd $(srcdir);
	${RMF} config.cache config.log config.out config.status src/config.h
	${RMF} -r autoconf/autom4te.cache autom4te.cache
	autoconf --prepend-include=$(srcdir)/autoconf \
	autoconf/configure.in > configure
	chmod 755 configure
	${RMF} -r autoconf/autom4te.cache autom4te.cache

config.status:
	if test -x config.status; then config.status --recheck; \
	else $(SHELL) configure; fi

autoconf/config.h.in: autoconf/configure.in autoconf/acconfig.h
	cd $(srcdir);
	${RMF} config.cache config.log config.out config.status src/config.h
	autoheader --prepend-include=$(srcdir)/autoconf \
	autoconf/configure.in > autoconf/config.h.in
	chmod 644 autoconf/config.h.in

libtool: Makefile $(LIBTOOL_DEPS)
	$(SHELL) ./config.status --recheck

installdirs:
	$(MKDIR) $(DESTDIR)$(sbindir)
	$(MKDIR) $(DESTDIR)$(sysconfdir)/burp
	$(MKDIR) $(DESTDIR)$(sysconfdir)/burp/clientconfdir
	$(MKDIR) $(DESTDIR)/var/lock/burp
	$(MKDIR) $(DESTDIR)/var/spool/burp

gnomedirs:
	$(MKDIR) $(DESTDIR)/usr/share/pixmaps
	$(MKDIR) $(DESTDIR)/usr/share/gnome/apps/System
	$(MKDIR) $(DESTDIR)/usr/share/applications
	$(MKDIR) $(DESTDIR)/etc/security/console.apps
	$(MKDIR) $(DESTDIR)/etc/pam.d

installation: install

install: installdirs
	@for I in $(all_subdirs); do (cd $$I && $(MAKE) DESTDIR=$(DESTDIR) $@ || exit 1); done
	@if [ ! -f $(DESTDIR)$(sysconfdir)/burp/burp-server.conf ] ; then cp configs/server/burp.conf $(DESTDIR)$(sysconfdir)/burp/burp-server.conf ; fi
	@if [ ! -f $(DESTDIR)$(sysconfdir)/burp/clientconfdir/testclient ] ; then cp configs/server/clientconfdir/testclient $(DESTDIR)$(sysconfdir)/burp/clientconfdir/testclient ; fi
	@if [ ! -f $(DESTDIR)$(sysconfdir)/burp/burp.conf ] ; then cp configs/client/burp.conf $(DESTDIR)$(sysconfdir)/burp/burp.conf ; fi
	@if [ ! -f $(DESTDIR)$(sysconfdir)/ssl_cert-server.pem ] ; then cp configs/certs/ssl_cert-server.pem $(DESTDIR)$(sysconfdir)/burp/ssl_cert-server.pem ; fi
	@if [ ! -f $(DESTDIR)$(sysconfdir)/burp/ssl_cert-client.pem ] ; then cp configs/certs/ssl_cert-client.pem $(DESTDIR)$(sysconfdir)/burp/ssl_cert-client.pem ; fi
	@if [ ! -f $(DESTDIR)$(sysconfdir)/burp/ssl_cert_ca.pem ] ; then cp configs/certs/ssl_cert_ca.pem $(DESTDIR)$(sysconfdir)/burp/ssl_cert_ca.pem ; fi
	@if [ ! -f $(DESTDIR)$(sysconfdir)/burp/dhfile.pem ] ; then cp configs/certs/dhfile.pem $(DESTDIR)$(sysconfdir)/burp/dhfile.pem ; fi
	@if [ ! -f $(DESTDIR)$(sysconfdir)/burp/timer_script ] ; then cp configs/server/timer_script $(DESTDIR)$(sysconfdir)/burp/timer_script && chmod 755 $(DESTDIR)$(sysconfdir)/burp/timer_script ; fi
	@if [ ! -f $(DESTDIR)$(sysconfdir)/burp/notify_script ] ; then cp configs/server/notify_script $(DESTDIR)$(sysconfdir)/burp/notify_script && chmod 755 $(DESTDIR)$(sysconfdir)/burp/notify_script ; fi

Makefile: Makefile.in
	cd $(topdir) \
	    && CONFIG_FILES=$(thisdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

Makefiles:
	$(SHELL) config.status

clean:
	@for I in ${all_subdirs} ; \
	  do (cd $$I; echo "==>Entering directory `pwd`"; ${MAKE} $@ || exit 1); done
	@$(RMF) *~ 1 2 3 core core.* config.guess console.log console.sum
	@$(RMF) config.log config.out
	@$(RMF) examples/1 examples/2 examples/devices/1 examples/devices/2
	@$(RMF) -r autom4te.cache
	@$(RMF) cross-tools-mingw32
	@$(RMF) cross-tools-mingw64
	@$(RMF) depkgs-mingw32
	@$(RMF) depkgs-mingw64
	@find . -name ".#*" -exec $(RMF) {} \;


distrib: configure autoconf/config.h.in

test:


tar.gz:  ../$(VERNAME).tar.gz
../$(VERNAME).tar.gz:
	(cd ..; tar cvf - $(VERNAME) | gzip -f9 > $(VERNAME).tar.gz)

tar.Z: ../$(VERNAME).tar.Z
../$(VERNAME).tar.Z:
	(cd ..; tar cvf - $(VERNAME) | compress > $(VERNAME).tar.Z)

tar.bz2: ../$(VERNAME).tar.bz2
../$(VERNAME).tar.bz2:
	(cd ..; tar cvf - $(VERNAME) | bzip2 -f9 > $(VERNAME).tar.bz2)

uuencode: tar.gz
	uuencode ../$(VERNAME).tar.gz $(VERNAME).tar.gz > ../$(VERNAME).tgz.uu

# ------------------------------------------------------------------------
