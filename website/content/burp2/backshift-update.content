<h3 align="center">Note from the author of Backshift, Dan Stromberg</h3>

<p>
I'm the author of backshift; I just noticed your useful backup
performance comparison.
</p>

<p>
Backshift is never fast - it's more about being frugal with diskspace.
You're correct that this is in part because of network filesystem I/O,
but a lot of it is because of the block-chopping algorithm and (slow but
thorough) xz compression.
</p>

<p>
However, on your initial fullsave, backshift is quite a lot faster if you
run it on Pypy, because the first fullsave is very CPU-intensive.
</p>

<p>
Subsequent backups tend to be faster on CPython with Cython, because
subsequent backups tend to be more I/O intensive, and CPython still beats
Pypy for I/O performance.
</p>

<p>
Examples of configuring backshift for use with Pypy or CPython+Cython are
at <a href="http://stromberg.dnsalias.org/~strombrg/backshift/documentation/for-all/installation.html">http://stromberg.dnsalias.org/~strombrg/backshift/documentation/for-all/installation.html</a>
</p>

<hr>

<p>
See also:
<a href=http://strombrg.blogspot.com.au/2015/10/backshift-is-deduplicating-backup.html">http://strombrg.blogspot.com.au/2015/10/backshift-is-deduplicating-backup.html</a>
</p>
